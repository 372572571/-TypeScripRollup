
//not
func CreateCouponTemp(c *gin.Context) {
	// 获取数据
	data, err := c.GetRawData()
	if err != nil {
		c.String(http.StatusInternalServerError, err.Error())
		return
	}
	// 数据填充结构
	req := pb_test.CreateCouponTempReq{}
	if err = json.Unmarshal(data, &req); err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 调用RPC服务
	results, err := client.testClient.CreateCouponTemp(context.Background(), &req)
	if err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 返回结果
	c.JSON(http.StatusOK, results)
}


//not
func CreateCoupons(c *gin.Context) {
	// 获取数据
	data, err := c.GetRawData()
	if err != nil {
		c.String(http.StatusInternalServerError, err.Error())
		return
	}
	// 数据填充结构
	req := pb_test.CreateCouponsReq{}
	if err = json.Unmarshal(data, &req); err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 调用RPC服务
	results, err := client.testClient.CreateCoupons(context.Background(), &req)
	if err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 返回结果
	c.JSON(http.StatusOK, results)
}


//not
func UserGetCoupon(c *gin.Context) {
	// 获取数据
	data, err := c.GetRawData()
	if err != nil {
		c.String(http.StatusInternalServerError, err.Error())
		return
	}
	// 数据填充结构
	req := pb_test.UserGetCouponReq{}
	if err = json.Unmarshal(data, &req); err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 调用RPC服务
	results, err := client.testClient.UserGetCoupon(context.Background(), &req)
	if err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 返回结果
	c.JSON(http.StatusOK, results)
}


//not
func GetUserCouponInfos(c *gin.Context) {
	// 获取数据
	data, err := c.GetRawData()
	if err != nil {
		c.String(http.StatusInternalServerError, err.Error())
		return
	}
	// 数据填充结构
	req := pb_test.GetUserCouponInfosReq{}
	if err = json.Unmarshal(data, &req); err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 调用RPC服务
	results, err := client.testClient.GetUserCouponInfos(context.Background(), &req)
	if err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 返回结果
	c.JSON(http.StatusOK, results)
}


//not
func GetCouponInfo(c *gin.Context) {
	// 获取数据
	data, err := c.GetRawData()
	if err != nil {
		c.String(http.StatusInternalServerError, err.Error())
		return
	}
	// 数据填充结构
	req := pb_test.GetCouponInfoReq{}
	if err = json.Unmarshal(data, &req); err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 调用RPC服务
	results, err := client.testClient.GetCouponInfo(context.Background(), &req)
	if err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 返回结果
	c.JSON(http.StatusOK, results)
}


//not
func UserOrder(c *gin.Context) {
	// 获取数据
	data, err := c.GetRawData()
	if err != nil {
		c.String(http.StatusInternalServerError, err.Error())
		return
	}
	// 数据填充结构
	req := pb_test.UserOrderReq{}
	if err = json.Unmarshal(data, &req); err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 调用RPC服务
	results, err := client.testClient.UserOrder(context.Background(), &req)
	if err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 返回结果
	c.JSON(http.StatusOK, results)
}


//not
func UserCancelOrder(c *gin.Context) {
	// 获取数据
	data, err := c.GetRawData()
	if err != nil {
		c.String(http.StatusInternalServerError, err.Error())
		return
	}
	// 数据填充结构
	req := pb_test.UserCancelOrderReq{}
	if err = json.Unmarshal(data, &req); err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 调用RPC服务
	results, err := client.testClient.UserCancelOrder(context.Background(), &req)
	if err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 返回结果
	c.JSON(http.StatusOK, results)
}


//not
func UserCompleteOrder(c *gin.Context) {
	// 获取数据
	data, err := c.GetRawData()
	if err != nil {
		c.String(http.StatusInternalServerError, err.Error())
		return
	}
	// 数据填充结构
	req := pb_test.UserCompleteOrderReq{}
	if err = json.Unmarshal(data, &req); err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 调用RPC服务
	results, err := client.testClient.UserCompleteOrder(context.Background(), &req)
	if err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 返回结果
	c.JSON(http.StatusOK, results)
}


//not
func EnableCoupons(c *gin.Context) {
	// 获取数据
	data, err := c.GetRawData()
	if err != nil {
		c.String(http.StatusInternalServerError, err.Error())
		return
	}
	// 数据填充结构
	req := pb_test.EnableCouponsReq{}
	if err = json.Unmarshal(data, &req); err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 调用RPC服务
	results, err := client.testClient.EnableCoupons(context.Background(), &req)
	if err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 返回结果
	c.JSON(http.StatusOK, results)
}


//not
func DisableCoupons(c *gin.Context) {
	// 获取数据
	data, err := c.GetRawData()
	if err != nil {
		c.String(http.StatusInternalServerError, err.Error())
		return
	}
	// 数据填充结构
	req := pb_test.DisableCouponsReq{}
	if err = json.Unmarshal(data, &req); err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 调用RPC服务
	results, err := client.testClient.DisableCoupons(context.Background(), &req)
	if err != nil {
		c.String(http.StatusOK, err.Error())
		return
	}
	// 返回结果
	c.JSON(http.StatusOK, results)
}

